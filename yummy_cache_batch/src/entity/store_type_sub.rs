//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.5

use sea_orm::entity::prelude::*;

use super::store_type_major;
use super::store_type_sub;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "store_type_sub")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = true)]
    sub_type: i32,
    major_type: i32,
    type_name: String,
    pub reg_dt: DateTime,
    pub chg_dt: Option<DateTime>,
    pub reg_id: String,
    pub chg_id: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::store_type_major::Entity",
        from = "Column::MajorType",
        to = "super::store_type_major::Column::MajorType"
    )]
    StoreTypeMajor
}

impl Related<store_type_major::Entity> for store_type_sub::Entity {
    fn to() -> RelationDef {
        Relation::StoreTypeMajor.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
